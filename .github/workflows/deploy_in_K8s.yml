name: 🚀 Deploy in k8s
on:
  workflow_run:
    workflows: ["🐳 Docker Release"]
    types: 
      - completed
permissions:
  contents: read

jobs:

  deploy-in-k8s:

    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Create RELEASE_VERSION TAG Version
      run: echo "RELEASE_VERSION=$(git describe --tags `git rev-list --tags --max-count=1`)" >> $GITHUB_ENV
    
    - name: Check RELEASE_VERSION TAG Version
      run: echo ${{ env.RELEASE_VERSION }}

    - name: Install doctl
      uses: digitalocean/action-doctl@v2
      with:
        token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}     

    - name: Save DigitalOcean kubeconfig with short-lived credentials
      run: doctl kubernetes cluster kubeconfig save --expiry-seconds 600 k8s-ulises-gascon

    - name: Update landing deployment file
      env:
        RELEASE_VERSION: ${{ env.RELEASE_VERSION }}
      run: sed -i 's|<IMAGE>|ulisesgascon/demo-foo-landing:'${RELEASE_VERSION}'|' $GITHUB_WORKSPACE/k8s/landing-deployment.yml

    - name: Deploy Landing to DigitalOcean Kubernetes
      run: kubectl apply -f $GITHUB_WORKSPACE/k8s/landing-deployment.yml

    - name: Verify Landing deployment
      run: kubectl rollout status deployment/demo-foo-landing

    - name: Deploy API to DigitalOcean Kubernetes
      run: kubectl apply -f $GITHUB_WORKSPACE/k8s/api-deployment.yml

    - name: Verify API deployment
      run: kubectl rollout status deployment/api-demo-foo